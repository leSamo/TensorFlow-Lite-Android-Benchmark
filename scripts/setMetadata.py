# Add metadata to TFlite model
# https://www.tensorflow.org/lite/convert/metadata

from tflite_support.metadata_writers import image_classifier
from tflite_support.metadata_writers import writer_utils

import os, sys, getopt

# ImageNet labels
DEFAULT_IMAGE_PATH = "labels/imagenet_labels_no_bg.txt"

opts, args = getopt.getopt(sys.argv[1:], "h", ["help"])

for option, arg in opts:
	if option == '-h' or option == '--help':
		print("Inserts metadata into tflite model\nUsage: python setMetadata.py")
		exit()

print("path to model file: ", end='')
MODEL_INPUT_PATH = input()
assert os.path.exists(MODEL_INPUT_PATH), "Path does not point to a valid file"

print("path to labels file (defaults to ImageNet labels): ", end='')
MODEL_LABELS_PATH = input()

if MODEL_LABELS_PATH:
    assert os.path.exists(MODEL_LABELS_PATH), "Path does not point to a valid file"
else:
    MODEL_LABELS_PATH = DEFAULT_IMAGE_PATH

print("Input norm mean (defaults to 127.5): ", end='')

try:
    INPUT_NORM_MEAN = float(input() or 127.5)
except:
    print("Input norm mean must be float")
    exit()

print("Input norm std (defaults to 127.5): ", end='')

try:
    INPUT_NORM_STD = float(input() or 127.5)
except:
    print("Input norm std must be float")
    exit()

DEFAULT_OUTPUT_PATH = os.path.splitext(MODEL_INPUT_PATH)[0] + "_M" + os.path.splitext(MODEL_INPUT_PATH)[1]

print(f"path for output file (defaults to {DEFAULT_OUTPUT_PATH}): ", end='')
MODEL_OUTPUT_PATH = input() or DEFAULT_OUTPUT_PATH

ImageClassifierWriter = image_classifier.MetadataWriter

# Create the metadata writer.
writer = ImageClassifierWriter.create_for_inference(
    writer_utils.load_file(MODEL_INPUT_PATH), [INPUT_NORM_MEAN], [INPUT_NORM_STD], [MODEL_LABELS_PATH])

# Verify the metadata generated by metadata writer.
print("Successfully created model with metadata to", MODEL_OUTPUT_PATH)

# Populate the metadata into the model.
writer_utils.save_file(writer.populate(), MODEL_OUTPUT_PATH)
